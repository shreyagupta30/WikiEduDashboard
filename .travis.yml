env:
# Job 1 skips most of the tests, to minimize the time it takes to deploy to production.
- TEST_SUITE='type:smoke' AFTER_SUCCESS='./travis-deploy-production.sh'
# Job 2 runs the full test suite, and also deploys to staging with JS coverage data
- TEST_SUITE='~type:foo' AFTER_SUCCESS='./travis-deploy-staging.sh'
language: ruby
rvm: 2.7.1
sudo: required
dist: xenial
cache:
  apt: true
  directories:
  - vendor
  - node_modules
addons:
  chrome: stable
  apt:
    packages:
    - pandoc
services:
  - mysql
  - redis-server
before_install:
- rvm --default use 2.7.1
- nvm install # use Node version specified in .nvmrc
- export PATH=$PATH:`yarn global bin`
- export DB=test
- export SENDER_EMAIL_ADDRESS='sender@wikiedu.org'
- node --version
- yarn --version
install:
- yarn install
- gem update --system
- gem install bundler
- gem install rubocop
- gem install rubocop-rspec-focused
- bundle install --jobs=3 --retry=3 --deployment
before_script:
- mkdir tmp -m 777
- cp config/database.travis.yml config/database.yml
- sudo mysql -e "CREATE DATABASE test DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;"
- bundle exec rake db:migrate RAILS_ENV=test
script:
  - yarn build
  - yarn test
  - COVERAGE=true bundle exec rspec --color --profile
    --tag $TEST_SUITE
  - bundle exec rubocop
  - yarn lint-non-build
after_success:
- "$AFTER_SUCCESS"
